on:
  workflow_call:
    inputs:
      artifact-prefix:
        description: "A common prefix for all artifacts generated by the workflow."
        type: string
        required: false
        default: "ipxe-"

jobs:
  ipxe:
    name: Build ${{ matrix.arch }}-${{ matrix.platform }}${{ matrix.sb }}/${{ matrix.driver }}.${{ matrix.extension }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # See https://ipxe.org/appnote/buildtargets
        arch: [ i386, x86_64, arm32, arm64 ]
        platform: [ pcbios, efi ]
        sb: [ "", -sb ]
        driver: [ ipxe, undionly, snponly ]
        extension: [ pxe, kpxe, efi ]
        exclude:
          # pcbios platform is not supported on arm
          - arch: arm64
            platform: pcbios
          - arch: arm32
            platform: pcbios
          # pcbios has no secure boot
          - platform: pcbios
            sb: -sb
          # undionly and snponly only work on pcbios and efi respectively
          - driver: undionly
            platform: efi
          - driver: snponly
            platform: pcbios
          # Each extension is only valid on either pcbios or efi
          - platform: pcbios
            extension: efi
          - platform: efi
            extension: pxe
          - platform: efi
            extension: kpxe
        include:
          # Add Ubuntu Cross-Compilation Toolchains based on architecture
          - arch: arm32
            toolchain: arm-linux-gnueabihf
          - arch: arm64
            toolchain: aarch64-linux-gnu
          - arch: i386
            toolchain: x86_64-linux-gnux32
          - arch: x86_64
            toolchain: x86_64-linux-gnu
    env:
      TARGET: bin-${{ matrix.arch }}-${{ matrix.platform }}${{ matrix.sb }}/${{ matrix.driver }}.${{ matrix.extension }}
      ARTIFACT: ipxe/build/${{ matrix.arch }}/${{ matrix.driver }}${{ matrix.sb }}.${{ matrix.extension }}
    steps:
      - name: Check out Code
        uses: actions/checkout@v5
        with:
          submodules: true
      - # We need to unshallow iPXE for version number calculation
        name: Unshallow iPXE
        working-directory: ./ipxe
        run: git fetch --unshallow
      - name: Setup Toolchain
        run: sudo apt-get update && sudo apt-get install --yes "${PACKAGE/_/-}" liblzma-dev mtools
        env:
          PACKAGE: gcc-${{ matrix.toolchain }}
      - name: Build Target
        working-directory: ./ipxe/src
        run: |
          git apply "$GITHUB_WORKSPACE/ipxe-config.patch"
          make -j$(nproc) "$TARGET"
        env:
          CROSS: ${{ matrix.toolchain }}-
      - name: Rename Target
        run: mkdir -p $(dirname "$ARTIFACT") && mv "ipxe/src/$TARGET" "$ARTIFACT"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-prefix }}${{ matrix.arch }}-${{ matrix.driver }}${{ matrix.sb }}.${{ matrix.extension }}
          path: |
            ${{ env.ARTIFACT }}
            .keep-directory-structure
          retention-days: 1
