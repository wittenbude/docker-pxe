on:
  workflow_call:
    inputs:
      artifact-prefix:
        description: "A common prefix for all artifacts generated by the workflow."
        type: string
        required: false
        default: "memtest-"

jobs:
  memtest:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # See https://github.com/memtest86plus/memtest86plus
        arch: [ i586, x86_64 ]
        include:
          # Add Ubuntu Cross-Compilation Toolchains based on architecture
          - arch: i586
            dir: build32
            toolchain: x86_64-linux-gnux32
          - arch: x86_64
            dir: build64
            toolchain: x86_64-linux-gnu
    env:
      ARTIFACT: memtest/${{ matrix.arch }}/memtest
    steps:
      - name: Check out Code
        uses: actions/checkout@v5
      - name: Check out iPXE
        run: git submodule update --init memtest
      - name: Setup Toolchain
        # See https://askubuntu.com/a/1437819
        run: |
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db
          sudo apt-get update && sudo apt-get install --yes "${PACKAGE/_/-}" dosfstools mtools
        env:
          PACKAGE: gcc-${{ matrix.toolchain }}
      - name: Install Additional Packages
        if: matrix.arch == 'i586'
        run: sudo apt-get install --yes libc6-dev-i386
      - name: Configure Memtest
        working-directory: ./memtest
        id: memtest
        run: |
          shopt -s nullglob
          echo "commit=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          echo "" | git apply --allow-empty "$GITHUB_WORKSPACE"/patches/memtest/*.patch
      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: memtest/${{ matrix.dir }}
          key: memtest-${{ matrix.arch }}-${{ steps.memtest.outputs.commit }}
      - name: Build MemTest86+
        run: |
          make -C "$BUILD" -j$(nproc) memtest.bin memtest.efi

          # Rename output file to $ARTIFACT, as is expected by the Dockerfile
          mkdir -p "$(dirname "$ARTIFACT")"
          mv "$BUILD/memtest.bin" "$ARTIFACT.bin"
          mv "$BUILD/memtest.efi" "$ARTIFACT.efi"
        env:
          BUILD: memtest/${{ matrix.dir }}
          CC: ${{ matrix.toolchain }}-gcc
          LD: ${{ matrix.toolchain }}-ld
          OBJCOPY: ${{ matrix.toolchain }}-objcopy
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-prefix }}${{ matrix.arch }}
          path: |
            ${{ env.ARTIFACT }}.bin
            ${{ env.ARTIFACT }}.efi
            .keep-directory-structure
          retention-days: 1
